// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.hamcrest.MatcherAssert;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import java.util.*;
public class DefinirValordaEmendaTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void definirValordaemenda() {
    // Abrir site
    driver.get("http://10.2.1.110:8080/legislativo-proposta-emenda-loa/2024/EMENDA/new");
    // Verificar botões
    {
      List<WebElement> elements = driver.findElements(By.id("field_valor"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.id("field_valor")).click();
    MatcherAssert.assertThat(driver.findElement(By.xpath("//valor-input/div/div/span")).getText(), is("R$"));
    MatcherAssert.assertThat(driver.findElement(By.xpath("//div[2]/span")).getText(), is(".00"));
    driver.findElement(By.cssSelector(".justify-content-center")).click();
    MatcherAssert.assertThat(driver.findElement(By.cssSelector(".form-text")).getText(), is("O campo é obrigatório."));
    // caixa de texto é digitável?
    {
      WebElement element = driver.findElement(By.id("field_valor"));
      Boolean isEditable = element.isEnabled() && element.getAttribute("readonly") == null;
      assertTrue(isEditable);
    }
    driver.findElement(By.id("field_valor")).sendKeys("500");
    {
      String value = driver.findElement(By.id("field_valor")).getAttribute("value");
      MatcherAssert.assertThat(value, is("500"));
    }
    // Aparece mensagem de erro de valor maximo atingido?
    driver.findElement(By.id("field_valor")).sendKeys("1000000000000000000000000000000000000000000000000");
    // Preenchendo opções genéricas
    driver.findElement(By.id("field_deputado")).click();
    {
      WebElement dropdown = driver.findElement(By.id("field_deputado"));
      dropdown.findElement(By.xpath("//option[. = 'Dep. Joaquim Nabuco']")).click();
    }
    driver.findElement(By.xpath("//ng-select/div/div")).click();
    driver.findElement(By.xpath("//div/div[2]/div")).click();
    driver.findElement(By.xpath("//div[2]/input")).click();
    driver.findElement(By.xpath("//div/div[2]/div/div")).click();
    driver.findElement(By.xpath("//div[2]/input")).click();
    driver.findElement(By.xpath("//div[2]/div[2]/div")).click();
    driver.findElement(By.xpath("//div[2]/input")).click();
    driver.findElement(By.xpath("//div/div[2]/div/div")).click();
    js.executeScript("window.scrollTo(0,500)");
    driver.findElement(By.xpath("//div[2]/input")).click();
    driver.findElement(By.xpath("//div/div[2]/div/div")).click();
    driver.findElement(By.id("field_objetivo")).click();
    driver.findElement(By.id("field_objetivo")).sendKeys("gftrgf");
    driver.findElement(By.cssSelector(".justify-content-center")).click();
    // O site não está detectando erros vindo do Type do Selenium, apenas o input direto e real do teclado, não detecta inputs vindos do Send Keys
    driver.findElement(By.id("field_valor")).sendKeys("59999");
    driver.findElement(By.id("field_valor")).sendKeys("60000");
  }
}
